/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.client;

import com.htc.test.ws.Bill;
import com.htc.test.ws.Customer;
import com.htc.test.ws.ShowTimes;
import com.htc.test.ws.Ticket;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import model.AppUser;
import view.FilmInfomationFrm;

/**
 *
 * @author vvt
 */
public class ChooseChairFrm extends javax.swing.JFrame {
    public FilmInfomationFrm filmInfomationFrm;
    private Bill bill = getBill();
    private ShowTimes showTime;
    private Map<String, Ticket> emptyTicket = new HashMap<>();
    /**
     * Creates new form Login
     */
    public ChooseChairFrm(FilmInfomationFrm filmInfomationFrm, ShowTimes showTime) {
        initComponents();
        this.filmInfomationFrm = filmInfomationFrm;
        bill.setCustomer((Customer) AppUser.getInstance().getUser());
        this.showTime = getShowTimesDetails(showTime);
        
        String choosedChair = "Ghế đã có người ngồi: ";
        String empChair = "Ghế còn trống: ";
        
        for (int i = 0; i < this.showTime.getListTicket().getTicket().size(); i++) {
            if(this.showTime.getListTicket().getTicket().get(i).isSold()) {
                choosedChair += this.showTime.getListTicket().getTicket().get(i).getC().getLocation() + ", ";
            }
            else{
                String chairName = this.showTime.getListTicket().getTicket().get(i).getC().getLocation() + "-" + this.showTime.getListTicket().getTicket().get(i).getC().getType().getType();
                if(emptyTicket.get(chairName) == null){
                    chooseChairBox.addItem(chairName);
                    emptyTicket.put(chairName, this.showTime.getListTicket().getTicket().get(i));
                }
                empChair += this.showTime.getListTicket().getTicket().get(i).getC().getLocation() + ", ";
            }
        }
        
        choosedCharis.setText(choosedChair);
        availableChair.setText(empChair);
    }
    
    public void updateChair(){
        String txt = "Ghế bạn chọn: ";
        double currentTotal = 0;
        
        for (Ticket ve : bill.getListTicket().getTicket()) {
            txt += ve.getC().getLocation() + ",";
            currentTotal += ve.getPrice();
        }
        
        bill.setTotal(currentTotal);
        total.setText("Tổng tiền: " + (long)currentTotal + "$");
        buychair.setText(txt);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        availableChair = new javax.swing.JLabel();
        choosedCharis = new javax.swing.JLabel();
        chooseChairBox = new javax.swing.JComboBox<>();
        buychair = new javax.swing.JLabel();
        buybtn = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        total = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        availableChair.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        availableChair.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        availableChair.setText("Ghế còn trống: A1,A2,A3,A4,A5,A6,B3,B4,B5,B6,C1,C2,...");
        availableChair.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        choosedCharis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        choosedCharis.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        choosedCharis.setText("Ghế đã có người ngồi: B1,B2,C5,C6,...");
        choosedCharis.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        chooseChairBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseChairBoxActionPerformed(evt);
            }
        });

        buychair.setText("Ghế bạn chọn: ");
        buychair.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        buybtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        buybtn.setText("Mua vé");
        buybtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buybtnActionPerformed(evt);
            }
        });

        cancelbtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cancelbtn.setText("Cancel");
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });

        total.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        total.setText("Tổng tiền: 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(availableChair, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(buychair, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(chooseChairBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(buybtn)
                                .addGap(147, 147, 147)
                                .addComponent(cancelbtn)))
                        .addGap(207, 207, 207))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(106, Short.MAX_VALUE)
                    .addComponent(choosedCharis, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(83, 83, 83)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(availableChair, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buychair, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseChairBox, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buybtn)
                    .addComponent(cancelbtn))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(47, 47, 47)
                    .addComponent(choosedCharis, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(354, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
        filmInfomationFrm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void chooseChairBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseChairBoxActionPerformed
        String item = (String) chooseChairBox.getSelectedItem();
        if(bill.getListTicket().getTicket().contains(emptyTicket.get(item)))
            bill.getListTicket().getTicket().remove(emptyTicket.get(item));
        else{
            if(emptyTicket.get(item) != null)
                bill.getListTicket().getTicket().add(emptyTicket.get(item));
        }
        
        updateChair();
    }//GEN-LAST:event_chooseChairBoxActionPerformed

    private void buybtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buybtnActionPerformed
        if(bill.getListTicket().getTicket().size() > 0){
            bill = addBill(bill);
            
            if(bill != null) {
                (new PayFrm(this, bill, showTime)).setVisible(true);
                this.setVisible(false);
            }
            else
                JOptionPane.showMessageDialog(this, "Fail creating new bill!");
        }
        else
            JOptionPane.showMessageDialog(this, "Must choose atleast 1 chair!");
    }//GEN-LAST:event_buybtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel availableChair;
    private javax.swing.JButton buybtn;
    private javax.swing.JLabel buychair;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JComboBox<String> chooseChairBox;
    private javax.swing.JLabel choosedCharis;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables

    private static ShowTimes getShowTimesDetails(com.htc.test.ws.ShowTimes showTimes) {
        com.htc.test.ws.UserWS_Service service = new com.htc.test.ws.UserWS_Service();
        com.htc.test.ws.UserWS port = service.getUserWSPort();
        return port.getShowTimesDetails(showTimes);
    }

    private static Bill getBill() {
        com.htc.test.ws.UserWS_Service service = new com.htc.test.ws.UserWS_Service();
        com.htc.test.ws.UserWS port = service.getUserWSPort();
        return port.getBill();
    }

    private static Bill addBill(com.htc.test.ws.Bill bill) {
        com.htc.test.ws.UserWS_Service service = new com.htc.test.ws.UserWS_Service();
        com.htc.test.ws.UserWS port = service.getUserWSPort();
        return port.addBill(bill);
    }

}
