/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import com.htc.test.ws.Film;
import com.htc.test.ws.ShowTimes;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import model.AppUser;
import view.client.ChooseChairFrm;

/**
 *
 * @author vvt
 */
public class FilmInfomationFrm extends javax.swing.JFrame {
    private Film film;
    /**
     * Creates new form Login
     */
    public FilmInfomationFrm(Film film) {
        initComponents();
        this.film = film;
        
        name.setText(this.film.getName());
        des.setText("Description: " + this.film.getDes());
        length.setText("Length: " + this.film.getLength());
        director.setText("Director: " + this.film.getDirector());
        String cate = "Category: ";
        for (int i = 0; i < this.film.getListFilmCategory().getFilmCategory().size(); i++) {
            cate += this.film.getListFilmCategory().getFilmCategory().get(i).getName() + ", ";
        }
        categories.setText(cate);
        
        //Chỉnh sửa ảnh
        switch (film.getName()) {
            case "Meo di hia":
                img.setIcon(new ImageIcon("src/img/meo di hia.JPG"));
                break;
            case "The Little Mermaid":
                img.setIcon(new ImageIcon("src/img/tien ca.jpg"));
                break;
            case "Captain america: the first avenger":
                img.setIcon(new ImageIcon("src/img/doi truong.jpg"));
                break;
            case "Snow White and the Seven Dwarfs":
                img.setIcon(new ImageIcon("src/img/Snow_White.jpg"));
                break;
            default:
                img.setIcon(new ImageIcon("src/img/meo di hia.JPG"));
        }
        
        getAllShowTimes();
    }
    
    public void getAllShowTimes() {
        film.getListShowTime().getShowTime().clear();
        List<ShowTimes> listShowTimes = getListShowTimesOfFilm(film);
        for (int i = 0; i < listShowTimes.size(); i++) {
            film.getListShowTime().getShowTime().add(listShowTimes.get(i));
        }
        
        updateTableData();
    }
    
    public void updateTableData() {
        String[] columnNames = {"Time Start", "Time End", "FilmRoom"};
        String[][] value = new String[film.getListShowTime().getShowTime().size()][3];
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd hh:mm");
        
        for(int i = 0; i < film.getListShowTime().getShowTime().size();i++){
            value[i][0] = dateFormat.format(film.getListShowTime().getShowTime().get(i).getTimeStart().toGregorianCalendar().getTime());
            value[i][1] = dateFormat.format(film.getListShowTime().getShowTime().get(i).getTimeEnd().toGregorianCalendar().getTime());
            value[i][2] = film.getListShowTime().getShowTime().get(i).getFilmRoom().getNote();
        }
        
        DefaultTableModel tableModel = new DefaultTableModel(value, columnNames){
            @Override
            public boolean isCellEditable(int row, int column) {
                //unable to edit cells
		return false;
            }
        };
        tblShowTimes.setModel(tableModel);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        name = new javax.swing.JLabel();
        img = new javax.swing.JLabel();
        des = new javax.swing.JLabel();
        director = new javax.swing.JLabel();
        categories = new javax.swing.JLabel();
        length = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblShowTimes = new javax.swing.JTable();
        backbtn = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        name.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("Mèo đi hia");

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/meo di hia.JPG"))); // NOI18N
        img.setText("jLabel2");

        des.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        des.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        des.setText("Mô tả");

        director.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        director.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        director.setText("director");

        categories.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        categories.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        categories.setText("Thể loại: Drama, Comedy, ...");
        categories.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        length.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        length.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        length.setText("Thời lượng: 2.5 tiếng");

        tblShowTimes.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tblShowTimes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"9h30", "12h"},
                {"15h", "17h30"},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Giờ bắt đầu", "Giờ kết thúc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblShowTimes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblShowTimes.setGridColor(new java.awt.Color(0, 0, 0));
        tblShowTimes.setShowHorizontalLines(true);
        tblShowTimes.setShowVerticalLines(true);
        tblShowTimes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblShowTimesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblShowTimes);

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backbtn)
                .addGap(30, 30, 30))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(director, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(des, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(length, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(categories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(name)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(des, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(length)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(director)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categories, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(img))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(backbtn)
                .addGap(188, 188, 188))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        AppUser.getInstance().getHome().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backbtnActionPerformed

    private void tblShowTimesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblShowTimesMouseClicked
        int index = tblShowTimes.getSelectedRow();
        (new ChooseChairFrm(this, film.getListShowTime().getShowTime().get(index))).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_tblShowTimesMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel categories;
    private javax.swing.JLabel des;
    private javax.swing.JLabel director;
    private javax.swing.JLabel img;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel length;
    private javax.swing.JLabel name;
    private javax.swing.JTable tblShowTimes;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<com.htc.test.ws.ShowTimes> getListShowTimesOfFilm(com.htc.test.ws.Film film) {
        com.htc.test.ws.UserWS_Service service = new com.htc.test.ws.UserWS_Service();
        com.htc.test.ws.UserWS port = service.getUserWSPort();
        return port.getListShowTimesOfFilm(film);
    }

}
